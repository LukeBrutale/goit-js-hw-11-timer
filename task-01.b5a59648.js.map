{"version":3,"sources":["js/task-01.js"],"names":["refs","daysEl","document","querySelector","hoursEl","minsEl","secsEl","CountdownTimer","selector","targetDate","onTick","time","getTime","Date","now","intervalId","secs","stop","mins","hours","days","Math","floor","setInterval","tick","clearInterval","newTimer","updateTimer","timer","textContent","pad","value","String","padStart","start"],"mappings":";;;AAwEA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAxEA,QAAA,qBACA,IAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,uBAC/BC,QAASF,SAASC,cAAc,wBAChCE,OAAQH,SAASC,cAAc,uBAC/BG,OAAQJ,SAASC,cAAc,wBAG3BI,EAAAA,WAC0C,SAAA,EAAA,GAAhCC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,OAAU,EAAA,KAAA,GACvCF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,OAASA,EACTC,KAAAA,KAAOF,EAAWG,UAAYC,KAAKC,MACnCC,KAAAA,WAAa,KA0DtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAvDE,MAAA,WACM,KAAKC,MAAQ,EACVC,KAAAA,OAEAD,KAAAA,MAAQ,EAEG,IAAd,KAAKA,MAAc,KAAKE,KAAO,IAC5BF,KAAAA,KAAO,GACPE,KAAAA,MAAQ,GAEG,IAAd,KAAKA,MAAc,KAAKC,MAAQ,IAC7BD,KAAAA,KAAO,GACPC,KAAAA,OAAS,GAEG,IAAf,KAAKA,OAAe,KAAKC,KAAO,IAC7BD,KAAAA,MAAQ,GACRC,KAAAA,MAAQ,KAuCnB,CAAA,IAAA,QAnCE,MAAA,WAAQ,IAAA,EAAA,KACDA,KAAAA,KAAOC,KAAKC,MAAM,KAAKX,KAAQ,OAC/BQ,KAAAA,MAAQE,KAAKC,MAAO,KAAKX,KAAQ,MAAyB,MAC1DO,KAAAA,KAAOG,KAAKC,MAAO,KAAKX,KAAQ,KAAoB,KACpDK,KAAAA,KAAOK,KAAKC,MAAO,KAAKX,KAAQ,IAAc,KAE9CI,KAAAA,WAAaQ,YAAY,WAC5B,EAAKC,OACL,EAAKd,OAAO,IACX,OA0BP,CAAA,IAAA,OAvBE,MAAA,WACEe,cAAc,KAAKV,gBAsBvB,EAhEMR,GA8CAmB,EAAW,IAAInB,EAAe,CAClCC,SAAU,WACVC,WAAY,IAAII,KAAK,mBACrBH,OAAQiB,IAGV,SAASA,EAAYC,GACXR,IAAAA,EAA4BQ,EAA5BR,KAAMD,EAAsBS,EAAtBT,MAAOD,EAAeU,EAAfV,KAAMF,EAASY,EAATZ,KAC3BhB,EAAKC,OAAO4B,YAAcT,EAC1BpB,EAAKI,QAAQyB,YAAcC,EAAIX,GAC/BnB,EAAKK,OAAOwB,YAAcC,EAAIZ,GAC9BlB,EAAKM,OAAOuB,YAAcC,EAAId,GAGhC,SAASc,EAAIC,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCP,EAASQ","file":"task-01.b5a59648.js","sourceRoot":"..\\src","sourcesContent":["import '../css/common.css';\r\nconst refs = {\r\n  daysEl: document.querySelector('[data-value=\"days\"]'),\r\n  hoursEl: document.querySelector('[data-value=\"hours\"]'),\r\n  minsEl: document.querySelector('[data-value=\"mins\"]'),\r\n  secsEl: document.querySelector('[data-value=\"secs\"]'),\r\n};\r\n\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate, onTick }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n    this.onTick = onTick;\r\n    this.time = targetDate.getTime() - Date.now();\r\n    this.intervalId = null;\r\n  }\r\n\r\n  tick() {\r\n    if (this.secs <= 0) {\r\n      this.stop();\r\n    } else {\r\n      this.secs -= 1;\r\n    }\r\n    if (this.secs === 0 && this.mins > 0) {\r\n      this.secs = 59;\r\n      this.mins -= 1;\r\n    }\r\n    if (this.mins === 0 && this.hours > 0) {\r\n      this.mins = 59;\r\n      this.hours -= 1;\r\n    }\r\n    if (this.hours === 0 && this.days > 0) {\r\n      this.hours = 23;\r\n      this.days -= 1;\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.days = Math.floor(this.time / (1000 * 60 * 60 * 24));\r\n    this.hours = Math.floor((this.time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    this.mins = Math.floor((this.time % (1000 * 60 * 60)) / (1000 * 60));\r\n    this.secs = Math.floor((this.time % (1000 * 60)) / 1000);\r\n\r\n    this.intervalId = setInterval(() => {\r\n      this.tick();\r\n      this.onTick(this);\r\n    }, 1000);\r\n  }\r\n\r\n  stop() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n}\r\n\r\nconst newTimer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('August 26, 2021'),\r\n  onTick: updateTimer,\r\n});\r\n\r\nfunction updateTimer(timer) {\r\n  const { days, hours, mins, secs } = timer;\r\n  refs.daysEl.textContent = days;\r\n  refs.hoursEl.textContent = pad(hours);\r\n  refs.minsEl.textContent = pad(mins);\r\n  refs.secsEl.textContent = pad(secs);\r\n}\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nnewTimer.start();"]}